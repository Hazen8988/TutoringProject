@model TutoringProject.Models.UserAccount.UserRegistrationRecord


@{
    ViewBag.Title = "Register";
}

@Html.ValidationSummary(false)
@using (Html.BeginForm("Register", "Account", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    @Html.Label("Email")
    @Html.EditorFor(model => model.UserAccount.Email)
    @Html.ValidationMessageFor(model => model.UserAccount.Email)
    <br />

    @Html.Label("Password")
    @Html.EditorFor(model => model.UserAccount.Password)
    @Html.ValidationMessageFor(model => model.UserAccount.Password)
    <br />

    @Html.Label("Confirm Password")
    @Html.EditorFor(model => model.UserAccount.ConfirmPassword)
    @Html.ValidationMessageFor(model => model.UserAccount.ConfirmPassword)
    <br />

    @Html.Label("First name")
    @Html.EditorFor(model => model.UserAccount.Fname)
    @Html.ValidationMessageFor(model => model.UserAccount.Fname)
    <br />

    @Html.Label("Last name")
    @Html.EditorFor(model => model.UserAccount.Lname)
    @Html.ValidationMessageFor(model => model.UserAccount.Lname)
    <br />

    @Html.LabelFor(model => model.Role)
    @Html.DropDownListFor(model => model.Role, new SelectList(new List<string>() { "Tutor", "Student" }), "Select Role")
    @Html.ValidationMessageFor(model => model.Role)
    <br />

    <div id="TutorFields" style="display:none;">
        @Html.Label("Delivery")
        @Html.EditorFor(model => model.Tutor.Delivery)
        @Html.ValidationMessageFor(model => model.Tutor.Delivery)
        <br />

        @Html.Label("Salary")
        @Html.EditorFor(model => model.Tutor.Salary)
        @Html.ValidationMessageFor(model => model.Tutor.Salary)
        <br />
    </div>

    <div id="StudentFields" style="display:none;">
        @Html.Label("Birthday")
        @Html.EditorFor(model => model.Student.Birthday)
        @Html.ValidationMessageFor(model => model.Student.Birthday)
        <br />
    </div>

    <button type="submit">Register</button>
}


<script>
    document.getElementById("Role").addEventListener("change", function () {
        var role = this.value;
        document.getElementById("TutorFields").style.display = role == "Tutor" ? "block" : "none";
        document.getElementById("StudentFields").style.display = role == "Student" ? "block" : "none";
    });
</script>


@* this will perform client-side validation *@
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}